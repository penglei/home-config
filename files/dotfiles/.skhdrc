#!/usr/bin/env sh

#debug
#alt - x : wmshow yabai tiling::window --close #

#keywords:
#https://github.com/koekeishiya/skhd/issues/1

#open a floating terminal
alt - return : skhd -k "ctrl + alt - i" && \
               sh -c 'if [ ls ${TMPDIR}Alacritty-*.sock > /dev/null 2>&1 ]; then alacritty msg create-window && sleep 0.03; else open -na /Users/penglei/Applications/Alacritty.app; fi' && \
               skhd -k "alt - t"

# toggle layout between 'bsp' and 'stack.
ctrl + cmd - space : yabai -m space --layout "$(yabai -m query --spaces --space | jq -r 'if .type == "bsp" then "stack" else "bsp" end')"

# focus bsp windows
alt - h : yabai -m window --focus west
alt - j : yabai -m window --focus south
alt - k : yabai -m window --focus north
alt - l : yabai -m window --focus east

# cyclic focus stack windows
ctrl - right : yabai -m query --spaces --space \
  | jq -re ".index" \
  | xargs -I{} yabai -m query --windows --space {} \
  | jq -sre '.[] | map(select(.minimized != 1)) | sort_by(.display, .frame.y, .frame.x, .id) | reverse | nth(index(map(select(."has-focus" == true))) - 1).id' \
  | xargs -I{} yabai -m window --focus {}

# backward
ctrl - left: yabai -m query --spaces --space \
  | jq -re ".index" \
  | xargs -I{} yabai -m query --windows --space {} \
  | jq -sre '.[] | map(select(.minimized != 1)) | sort_by(.display, .frame.y, .frame.y, .id) | nth(index(map(select(."has-focus" == true))) - 1).id' \
  | xargs -I{} yabai -m window --focus {}

# swap bsp window (move to target window area and resize)
shift + alt - x : yabai -m window --swap recent
shift + alt - h : yabai -m window --swap west
shift + alt - j : yabai -m window --swap south
shift + alt - k : yabai -m window --swap north
shift + alt - l : yabai -m window --swap east
# move bsp window (keep size but re-arrange relative windows)
shift + cmd - left : yabai -m window --warp west
shift + cmd - down : yabai -m window --warp south
shift + cmd - up : yabai -m window --warp north
shift + cmd - right : yabai -m window --warp east

# move floating window
ctrl + shift - a : yabai -m window --move rel:-100:0
ctrl + shift - s : yabai -m window --move rel:0:100
ctrl + shift - w : yabai -m window --move rel:0:-100
ctrl + shift - d : yabai -m window --move rel:100:0
# make floating window fill top-half of screen
shift + alt - up     : yabai -m window --grid 2:1:0:0:1:1
# make floating window fill bottom-half of screen
shift + alt - down   : yabai -m window --grid 2:1:0:1:1:1
# make floating window fill left-half of screen
shift + alt - left   : yabai -m window --grid 1:2:0:0:1:1
# make floating window fill right-half of screen
shift + alt - right  : yabai -m window --grid 1:2:1:0:1:1

# destroy desktop
# cmd + alt - w : yabai -m space --destroy
# cmd + alt - w : yabai -m space --focus prev && yabai -m space recent --destroy

# fast focus desktop
#shift + alt - x : yabai -m space --focus recent
# shift + alt - z : yabai -m space --focus prev || skhd -k "ctrl + alt + cmd - z"
# shift + alt - c : yabai -m space --focus next || skhd -k "ctrl + alt + cmd - c"
alt - backspace : yabai -m space --focus recent
alt - left  : yabai -m space --focus prev
alt - right : yabai -m space --focus next
alt - 1 : yabai -m space --focus  1
alt - 2 : yabai -m space --focus  2
alt - 3 : yabai -m space --focus  3
alt - 4 : yabai -m space --focus  4
alt - 5 : yabai -m space --focus  5
alt - 6 : yabai -m space --focus  misc
alt - 9 : yabai -m space --focus  adhoc

#"Command + m" is traditional shortcut for minimize current window
#I don't think minimizing a window is needed, instead we can move it to a "hidden" space!
cmd - m : yabai -m window --space adhoc
#"shift + alt" prefix is used to move window around spaces,
#the frequent ordinary operation in adhoc space is move out window,
#so we can keep 'shift' key to reduce modifier key switch between 'shift + alt' and 'alt'.
shift + alt - 0 : yabai -m space --focus adhoc

# send window to desktop and follow focus
shift + alt - backspace : yabai -m window --space recent && yabai -m space --focus recent
shift + alt - left : yabai -m window --space prev && yabai -m space --focus prev
shift + alt - right : yabai -m window --space next && yabai -m space --focus next
shift + alt - 1 : yabai -m window --space  1 && yabai -m space --focus 1
shift + alt - 2 : yabai -m window --space  2 && yabai -m space --focus 2
shift + alt - 3 : yabai -m window --space  3 && yabai -m space --focus 3
shift + alt - 4 : yabai -m window --space  4 && yabai -m space --focus 4
shift + alt - 5 : yabai -m window --space  5 && yabai -m space --focus 5
shift + alt - 6 : yabai -m window --space  misc && yabai -m space --focus misc
shift + alt - 9 : yabai -m window --space  adhoc && yabai -m space --focus adhoc

# # focus monitor
# ctrl + alt - x  : yabai -m display --focus recent
# ctrl + alt - z  : yabai -m display --focus prev
# ctrl + alt - c  : yabai -m display --focus next
# ctrl + alt - 1  : yabai -m display --focus 1
# ctrl + alt - 2  : yabai -m display --focus 2
# ctrl + alt - 3  : yabai -m display --focus 3
#
# # send window to monitor and follow focus
# ctrl + cmd - x  : yabai -m window --display recent && yabai -m display --focus recent
# ctrl + cmd - z  : yabai -m window --display prev && yabai -m display --focus prev
# ctrl + cmd - c  : yabai -m window --display next && yabai -m display --focus next
# ctrl + cmd - 1  : yabai -m window --display 1 && yabai -m display --focus 1
# ctrl + cmd - 2  : yabai -m window --display 2 && yabai -m display --focus 2
# ctrl + cmd - 3  : yabai -m window --display 3 && yabai -m display --focus 3

# balance size of windows
shift + alt - r : yabai -m space --balance
#resize window
shift + alt - w : yabai -m window --resize top:0:-100 --resize bottom:0:100
shift + alt - s : yabai -m window --resize top:0:100 --resize bottom:0:-100
shift + alt - a : yabai -m window --resize left:-100:0 --resize right:100:0
shift + alt - d : yabai -m window --resize left:100:0 --resize right:-100:0

# # increase window size
# shift + alt - a : yabai -m window --resize left:-100:0
# shift + alt - s : yabai -m window --resize bottom:0:100
# shift + alt - w : yabai -m window --resize top:0:-100
# shift + alt - d : yabai -m window --resize right:100:0
#
# # decrease window size
# shift + cmd - a : yabai -m window --resize left:100:0
# shift + cmd - s : yabai -m window --resize bottom:0:-100
# shift + cmd - w : yabai -m window --resize top:0:100
# shift + cmd - d : yabai -m window --resize right:-100:0

# set insertion point in focused container
ctrl + alt - h : yabai -m window --insert west
ctrl + alt - j : yabai -m window --insert south
ctrl + alt - k : yabai -m window --insert north
ctrl + alt - l : yabai -m window --insert east
ctrl + alt - i : yabai -m window --insert stack

# rotate tree
alt - r : yabai -m space --rotate 90

# mirror tree y-axis
alt - y : yabai -m space --mirror y-axis

# mirror tree x-axis
alt - x : yabai -m space --mirror x-axis

# toggle desktop offset
alt - a : yabai -m space --toggle padding --toggle gap

# toggle window parent zoom
# alt - d : yabai -m window --toggle zoom-parent

# toggle window fullscreen zoom
alt - m : yabai -m window --toggle zoom-fullscreen

# toggle window native fullscreen
shift + alt - m : yabai -m window --toggle native-fullscreen

# toggle window split type
alt - e : yabai -m window --toggle split

# float / unfloat window and restore position
alt - t : yabai -m window --toggle float --grid 8:8:1:1:6:6

# toggle sticky (show on all spaces)
alt - s : yabai -m window --toggle sticky --toggle topmost --toggle float --grid 8:8:3:0:5:6

# toggle opacity
alt - o : yabai -m config window_opacity "$(yabai -m query --windows | jq -r 'if any(.[]; .opacity < 1) then "off" else "on" end')" \
          && sketchybar -m --trigger opacity_change &> /dev/null

# toggle picture-in-picture
alt - p : yabai -m window --toggle border --toggle pip

ctrl + shift + alt + cmd - k : update-yabai-unmanaged-apps add
ctrl + shift + alt + cmd - l : update-yabai-unmanaged-apps delete

